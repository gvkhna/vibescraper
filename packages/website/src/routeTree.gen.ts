/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as SignoutRouteImport } from './routes/signout'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as SampleTableRouteImport } from './routes/sample-table'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as RecoverAccountRouteImport } from './routes/recover-account'
import { Route as MagicLinkRouteImport } from './routes/magic-link'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as AppRouteImport } from './routes/app'
import { Route as AcceptInviteRouteImport } from './routes/accept-invite'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AppIndexRouteImport } from './routes/app/index'
import { Route as DatasetDatasetPublicIdRouteImport } from './routes/dataset/$dataset-public-id'
import { Route as AppSettingsIndexRouteImport } from './routes/app/settings/index'
import { Route as AppScrapersIndexRouteImport } from './routes/app/scrapers/index'
import { Route as AppDashboardIndexRouteImport } from './routes/app/dashboard/index'
import { Route as AppScraperProjectPublicIdEditRouteImport } from './routes/app/scraper/$project-public-id/edit'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const SignoutRoute = SignoutRouteImport.update({
  id: '/signout',
  path: '/signout',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const SampleTableRoute = SampleTableRouteImport.update({
  id: '/sample-table',
  path: '/sample-table',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RecoverAccountRoute = RecoverAccountRouteImport.update({
  id: '/recover-account',
  path: '/recover-account',
  getParentRoute: () => rootRouteImport,
} as any)
const MagicLinkRoute = MagicLinkRouteImport.update({
  id: '/magic-link',
  path: '/magic-link',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const AcceptInviteRoute = AcceptInviteRouteImport.update({
  id: '/accept-invite',
  path: '/accept-invite',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRoute,
} as any)
const DatasetDatasetPublicIdRoute = DatasetDatasetPublicIdRouteImport.update({
  id: '/dataset/$dataset-public-id',
  path: '/dataset/$dataset-public-id',
  getParentRoute: () => rootRouteImport,
} as any)
const AppSettingsIndexRoute = AppSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => AppRoute,
} as any)
const AppScrapersIndexRoute = AppScrapersIndexRouteImport.update({
  id: '/scrapers/',
  path: '/scrapers/',
  getParentRoute: () => AppRoute,
} as any)
const AppDashboardIndexRoute = AppDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AppRoute,
} as any)
const AppScraperProjectPublicIdEditRoute =
  AppScraperProjectPublicIdEditRouteImport.update({
    id: '/scraper/$project-public-id/edit',
    path: '/scraper/$project-public-id/edit',
    getParentRoute: () => AppRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/accept-invite': typeof AcceptInviteRoute
  '/app': typeof AppRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/magic-link': typeof MagicLinkRoute
  '/recover-account': typeof RecoverAccountRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sample-table': typeof SampleTableRoute
  '/signin': typeof SigninRoute
  '/signout': typeof SignoutRoute
  '/signup': typeof SignupRoute
  '/dataset/$dataset-public-id': typeof DatasetDatasetPublicIdRoute
  '/app/': typeof AppIndexRoute
  '/app/dashboard': typeof AppDashboardIndexRoute
  '/app/scrapers': typeof AppScrapersIndexRoute
  '/app/settings': typeof AppSettingsIndexRoute
  '/app/scraper/$project-public-id/edit': typeof AppScraperProjectPublicIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/accept-invite': typeof AcceptInviteRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/magic-link': typeof MagicLinkRoute
  '/recover-account': typeof RecoverAccountRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sample-table': typeof SampleTableRoute
  '/signin': typeof SigninRoute
  '/signout': typeof SignoutRoute
  '/signup': typeof SignupRoute
  '/dataset/$dataset-public-id': typeof DatasetDatasetPublicIdRoute
  '/app': typeof AppIndexRoute
  '/app/dashboard': typeof AppDashboardIndexRoute
  '/app/scrapers': typeof AppScrapersIndexRoute
  '/app/settings': typeof AppSettingsIndexRoute
  '/app/scraper/$project-public-id/edit': typeof AppScraperProjectPublicIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/accept-invite': typeof AcceptInviteRoute
  '/app': typeof AppRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRoute
  '/magic-link': typeof MagicLinkRoute
  '/recover-account': typeof RecoverAccountRoute
  '/reset-password': typeof ResetPasswordRoute
  '/sample-table': typeof SampleTableRoute
  '/signin': typeof SigninRoute
  '/signout': typeof SignoutRoute
  '/signup': typeof SignupRoute
  '/dataset/$dataset-public-id': typeof DatasetDatasetPublicIdRoute
  '/app/': typeof AppIndexRoute
  '/app/dashboard/': typeof AppDashboardIndexRoute
  '/app/scrapers/': typeof AppScrapersIndexRoute
  '/app/settings/': typeof AppSettingsIndexRoute
  '/app/scraper/$project-public-id/edit': typeof AppScraperProjectPublicIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/accept-invite'
    | '/app'
    | '/forgot-password'
    | '/magic-link'
    | '/recover-account'
    | '/reset-password'
    | '/sample-table'
    | '/signin'
    | '/signout'
    | '/signup'
    | '/dataset/$dataset-public-id'
    | '/app/'
    | '/app/dashboard'
    | '/app/scrapers'
    | '/app/settings'
    | '/app/scraper/$project-public-id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/accept-invite'
    | '/forgot-password'
    | '/magic-link'
    | '/recover-account'
    | '/reset-password'
    | '/sample-table'
    | '/signin'
    | '/signout'
    | '/signup'
    | '/dataset/$dataset-public-id'
    | '/app'
    | '/app/dashboard'
    | '/app/scrapers'
    | '/app/settings'
    | '/app/scraper/$project-public-id/edit'
  id:
    | '__root__'
    | '/'
    | '/accept-invite'
    | '/app'
    | '/forgot-password'
    | '/magic-link'
    | '/recover-account'
    | '/reset-password'
    | '/sample-table'
    | '/signin'
    | '/signout'
    | '/signup'
    | '/dataset/$dataset-public-id'
    | '/app/'
    | '/app/dashboard/'
    | '/app/scrapers/'
    | '/app/settings/'
    | '/app/scraper/$project-public-id/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AcceptInviteRoute: typeof AcceptInviteRoute
  AppRoute: typeof AppRouteWithChildren
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  MagicLinkRoute: typeof MagicLinkRoute
  RecoverAccountRoute: typeof RecoverAccountRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SampleTableRoute: typeof SampleTableRoute
  SigninRoute: typeof SigninRoute
  SignoutRoute: typeof SignoutRoute
  SignupRoute: typeof SignupRoute
  DatasetDatasetPublicIdRoute: typeof DatasetDatasetPublicIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signout': {
      id: '/signout'
      path: '/signout'
      fullPath: '/signout'
      preLoaderRoute: typeof SignoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sample-table': {
      id: '/sample-table'
      path: '/sample-table'
      fullPath: '/sample-table'
      preLoaderRoute: typeof SampleTableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recover-account': {
      id: '/recover-account'
      path: '/recover-account'
      fullPath: '/recover-account'
      preLoaderRoute: typeof RecoverAccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/magic-link': {
      id: '/magic-link'
      path: '/magic-link'
      fullPath: '/magic-link'
      preLoaderRoute: typeof MagicLinkRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/accept-invite': {
      id: '/accept-invite'
      path: '/accept-invite'
      fullPath: '/accept-invite'
      preLoaderRoute: typeof AcceptInviteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/dataset/$dataset-public-id': {
      id: '/dataset/$dataset-public-id'
      path: '/dataset/$dataset-public-id'
      fullPath: '/dataset/$dataset-public-id'
      preLoaderRoute: typeof DatasetDatasetPublicIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/settings/': {
      id: '/app/settings/'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppSettingsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/scrapers/': {
      id: '/app/scrapers/'
      path: '/scrapers'
      fullPath: '/app/scrapers'
      preLoaderRoute: typeof AppScrapersIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/dashboard/': {
      id: '/app/dashboard/'
      path: '/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AppDashboardIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/scraper/$project-public-id/edit': {
      id: '/app/scraper/$project-public-id/edit'
      path: '/scraper/$project-public-id/edit'
      fullPath: '/app/scraper/$project-public-id/edit'
      preLoaderRoute: typeof AppScraperProjectPublicIdEditRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppDashboardIndexRoute: typeof AppDashboardIndexRoute
  AppScrapersIndexRoute: typeof AppScrapersIndexRoute
  AppSettingsIndexRoute: typeof AppSettingsIndexRoute
  AppScraperProjectPublicIdEditRoute: typeof AppScraperProjectPublicIdEditRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppDashboardIndexRoute: AppDashboardIndexRoute,
  AppScrapersIndexRoute: AppScrapersIndexRoute,
  AppSettingsIndexRoute: AppSettingsIndexRoute,
  AppScraperProjectPublicIdEditRoute: AppScraperProjectPublicIdEditRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AcceptInviteRoute: AcceptInviteRoute,
  AppRoute: AppRouteWithChildren,
  ForgotPasswordRoute: ForgotPasswordRoute,
  MagicLinkRoute: MagicLinkRoute,
  RecoverAccountRoute: RecoverAccountRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SampleTableRoute: SampleTableRoute,
  SigninRoute: SigninRoute,
  SignoutRoute: SignoutRoute,
  SignupRoute: SignupRoute,
  DatasetDatasetPublicIdRoute: DatasetDatasetPublicIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
